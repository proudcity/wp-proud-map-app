!function($){angular.module("scrollTo",[]).run(["$rootScope",function($rootScope){/* currentYPosition -
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
var currentYPosition=function(){
// Firefox, Chrome, Opera, Safari
// Firefox, Chrome, Opera, Safari
// Internet Explorer 6 - standards mode
// Internet Explorer 6, 7 and 8
return window.pageYOffset?window.pageYOffset:document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop?document.body.scrollTop:0};$rootScope.currentYPosition=currentYPosition,/* scrollTo -
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
$rootScope.scrollTo=function(eID,scrollDiv,quick){/* scrollTo -
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
function elmYPosition(eID){if(eID){for(var elm=document.getElementById(eID),y=elm.offsetTop,node=elm;node.offsetParent&&node.offsetParent!=document.body;)node=node.offsetParent,y+=node.offsetTop;return y}}
// This scrolling function 
// is from http://www.itnewb.com/tutorial/Creating-the-Smooth-Scroll-Effect-with-JavaScript
var i,startY=currentYPosition(),stopY=elmYPosition(eID),distance=stopY>startY?stopY-startY:startY-stopY;if(100>distance||quick)return void scrollTo(0,stopY);var speed=Math.round(distance/100);speed>=20&&(speed=20);var step=Math.round(distance/25),leapY=stopY>startY?startY+step:startY-step,timer=0;if(stopY>startY)for(i=startY;stopY>i;i+=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY+=step,leapY>stopY&&(leapY=stopY),timer++;else for(i=startY;i>stopY;i-=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY-=step,stopY>leapY&&(leapY=stopY),timer++}}]),
//***************************************
// Main Application
//***************************************
angular.module("mapAppParent",["mapApp","angular-inview","angular-lazycompile"]).run(["$rootScope","$window","$location",function($rootScope,$window,$location){$rootScope.mapboxAccessToken="pk.eyJ1IjoiYWxiYXRyb3NzZGlnaXRhbCIsImEiOiI1cVUxbUxVIn0.SqKOVeohLfY0vfShalVDUw",$rootScope.mapboxMap="albatrossdigital.lpkdpcjb",$rootScope.proudcityApi="http://my.getproudcity.com/api/proudcity/",$rootScope.proxyUrl=$rootScope.proudcityApi+"proxy",$rootScope.paymentUrl=$rootScope.proudcityApi+"invoice-example"}]).controller("MapControl",["$scope","$rootScope","$filter","$http",function($scope,$rootScope,$filter,$http){Proud=Proud||{};var $state={params:{city:_.get(Proud,"settings.global.location.city")||"seattle",state:_.get(Proud,"settings.global.location.state")||"washington"}},ucWords=function(str){return(str+"").replace("-"," ").replace(/^([a-z\u00E0-\u00FC])|\s+([a-z\u00E0-\u00FC])/g,function($1){return $1.toUpperCase()})};$scope.location={state:ucWords($state.params.state),city:ucWords($state.params.city),key:{state:$state.params.state,city:$state.params.city}},console.log(Proud),$rootScope.appId=void 0!=$rootScope.appId?$rootScope.appId:"proud_map_app-1391006",$scope.settings={lat:_.get(Proud,"settings.global.location.lat")||"",lng:_.get(Proud,"settings.global.location.lng")||"",city:_.get(Proud,"settings.global.location.city")||"",state:_.get(Proud,"settings.global.location.state")||"",wordpress:{apiUrl:_.get(Proud,"settings.proud_map_app.global.api_path")||""},foursquare:{clientKey:"1CAZ5UW5UDQ2F1EDEHFOULURU4K3RBWWITBOONJ2XLXPD52V",clientSecret:"GA4DAN4KLI5UM0VJ4BAZAE4SEVLIR0BC5B4UKGNVR2VJXXWN",apiUrl:"https://api.foursquare.com/"}},console.log($rootScope.appId)}]).directive("mapParent",function(){return{restrict:"A",controller:"MapControl",template:'<div proud-map="settings" />'}}),angular.module("mapApp",["ngSanitize","ngResource"]).run(["$rootScope","$window","$location",function($rootScope,$window,$location){
// Capture url for back button
$rootScope.$on("$locationChangeSuccess",function(){$rootScope.actualLocation=$location.absUrl()})}]).directive("proudMap",function($window,$browser,$http,$location,$rootScope){return{restrict:"A",templateUrl:"views/apps/mapApp/map.html",replace:!1,scope:{proudMap:"="},link:function($scope,$element,$attrs){$scope.details={};var $mapWrap=$("#map-wrapper"),$body=$("body");
// Set up full screen action
$scope.toggleFullScreen=function(e){e&&(e.preventDefault(),e.stopPropagation()),$rootScope.fullScreen=!$rootScope.fullScreen,$body.toggleClass("proud-map-fullscreen")},
// Expand map if closed
$mapWrap.click(function(e){$rootScope.fullScreen||$scope.toggleFullScreen(e)}),
// Listen for esc key
$body.keydown(function(e){//keypress did not work with ESC;
"27"==e.which&&$rootScope.fullScreen&&$scope.toggleFullScreen()}),
// Listen for back button
$rootScope.$watch(function(){return $location.absUrl()},function(newLocation,oldLocation){$rootScope.actualLocation===newLocation&&$rootScope.fullScreen&&$scope.toggleFullScreen()}),
// Slide filters for mobile
$scope.toggleFilter=function(){return $mapWrap.toggleClass("filter-open"),!1},
// Make details close link
$("#details-close").click(function(){return $mapWrap.removeClass("details-open"),!1}),$scope.$watch("proudMap",function(settings){function addLayer(name,type,zoom,query,active){active=void 0==active?!1:active;
// Create a simple layer switcher that
// toggles layers on and off.
var link=document.createElement("a");link.href="#",link.className=active?"active":"",link.innerHTML=name,link.onclick=function(e){e.preventDefault(),e.stopPropagation();for(var key in mapLayers)map.removeLayer(mapLayers[key]);
//var key = $.inArray( query, mapLayers );
//if ( key != -1) {
//  return map.setLayoutProperty(mapLayers[key], 'visibility', 'visible');
//}
// @todo: attribution
//map.setView(new L.LatLng(settings.lat, settings.lng), zoom, {animate: true});
//map.invalidateSize();
switch($("#menu-ui a.active").removeClass("active"),this.className="active",type){case"wordpress":console.log(query),addWordpressLayer(query);
//attr.addAttribution('This website');
break;case"foursquare":if(Array.isArray(query))for(var i=0;i<query.length;i++)addFoursquareLayer(query[i],"large");else addFoursquareLayer(query,"large");
//attr.addAttribution('<a href="http://foursquare.com">Foursquare</a>');
map.attributionControl.setPrefix('Data from <a href="http://foursquare.com">Foursquare</a>');break;case"seeclickfix":addSeeClickFixLayer("closed"),addSeeClickFixLayer("open"),addSeeClickFixLayer("acknowledged"),map.attributionControl.setPrefix('Data from <a href="http://seeclickfix.com">SeeClickFix</a>')}},active&&$(link).trigger("click"),layers.appendChild(link)}function addWordpressLayer(query){console.log(settings.wordpress.apiUrl);var url=settings.wordpress.apiUrl+"?direction=ASC&filter%5Blocation-taxonomy%5D="+query+"&sort=date";$.getJSON(url,{},function(data){console.log(data);for(var geojson={type:"FeatureCollection",features:[]},i=0;i<data.length;i++){var item=data[i],properties=item.meta,marker=iconColor(query);$.extend(properties,marker,{title:item.title.rendered,
//'marker-size': size,
url:void 0!=item.meta.website?item.meta.website:null,details:item.content.rendered}),geojson.features.push({type:"Feature",properties:properties,geometry:{type:"Point",coordinates:[item.meta.lng,item.meta.lat]}})}console.log(geojson),mapLayers[query]=L.mapbox.featureLayer().setGeoJSON(geojson),mapLayers[query].on("mouseover",function(e){e.layer.openPopup()}).on("mouseout",function(e){e.layer.closePopup()}).on("click",function(e){var props=e.layer.feature.properties;props.type="wordpress",props.location=props,props.location.postalCode=props.zip,props.googleLocal={hours:props.hours},console.log(props),$mapWrap.addClass("details-open"),$scope.details=props,$scope.$apply()}),mapLayers[query].addTo(map)})}function addFoursquareLayer(query,size){/* Query Foursquare API for venue recommendations near the current location. */
//if (mapLayers[query] != undefined) {
//  console.log(mapLayers[query]);
//  mapLayers[query].addTo(map);
//}
//else {
var url=settings.foursquare.apiUrl+"v2/venues/explore?ll="+settings.lat+","+settings.lng+"&query="+query+"&client_id="+settings.foursquare.clientKey+"&client_secret="+settings.foursquare.clientSecret+"&v=20140601";$.getJSON(url,{},function(data){/* Place marker for each venue. */
for(var venues=data.response.groups[0].items,geojson=(L.mapbox.featureLayer(),{type:"FeatureCollection",features:[]}),i=0;i<venues.length;i++){var category=venues[i].venue.categories[0].name,marker=iconColor(category);geojson.features.push({type:"Feature",properties:{title:venues[i].venue.name,"marker-color":marker["marker-color"],
//'marker-size': size,
"marker-symbol":marker["marker-icon"],url:void 0!=venues[i].venue.url?venues[i].venue.url:void 0,details:venues[i].venue},geometry:{type:"Point",coordinates:[venues[i].venue.location.lng,venues[i].venue.location.lat]}})}//for
mapLayers[query]=L.mapbox.featureLayer().setGeoJSON(geojson),mapLayers[query].on("mouseover",function(e){e.layer.openPopup()}).on("mouseout",function(e){e.layer.closePopup()}).on("click",function(e){var props=e.layer.feature.properties.details;props.type="foursquare",$mapWrap.addClass("details-open"),
//if (e.layer.feature.properties.url != undefined) {
//  window.location = props.url;
//}d
//else {
$scope.details=props,$scope.$apply();var url="https://maps.googleapis.com/maps/api/place/search/json?"+$.param({location:e.layer.feature.geometry.coordinates[1]+","+e.layer.feature.geometry.coordinates[0],type:query.replace(" station",""),search:props.title,key:"AIzaSyAqSVs6Hsk1EjKiSa4TV9fykhB7K3ijkaM",sensor:!0,radius:250});$.getJSON($scope.$parent.$root.proxyUrl+"?url="+encodeURIComponent(url),{},function(data){if("OK"==data.status&&data.results[0]){var url="https://maps.googleapis.com/maps/api/place/details/json?"+$.param({key:"AIzaSyAqSVs6Hsk1EjKiSa4TV9fykhB7K3ijkaM",placeid:data.results[0].place_id});$.getJSON($scope.$parent.$root.proxyUrl+"?url="+encodeURIComponent(url),{},function(data){"OK"==data.status&&void 0!=data.result&&($scope.details.website=data.result.website,$scope.googleLocal=data.result,$scope.googleLocal.hours=void 0!=data.result.opening_hours?data.result.opening_hours.weekday_text.join("<br/>"):!1,$scope.$apply())})}})}),mapLayers[query].addTo(map)})}function addSeeClickFixLayer(status){var query="seeclickfix "+status,geojson=(L.mapbox.featureLayer(),{type:"FeatureCollection",features:[]}),url="https://seeclickfix.com/api/v2/issues?&callback=?&"+$.param({lat:settings.lat,lng:settings.lng,zoom:map.getZoom()-1,per_page:50,sort:"created_at",status:status});$.getJSON(url,{},function(data){/* Place marker for each venue. */
for(var venues=data.issues,i=0;i<venues.length;i++){var props=venues[i],color="Acknowledged"==props.status?"#E3B14D":"Open"==props.status?"#E76C6D":"Closed"==props.status?"#9BBF6A":"#CCCCCC";// Archived;
props["marker-color"]=color,props["marker-size"]="large",props["marker-symbol"]=void 0!=props.media.image_full?"star":"star-stroked",props.title=props.summary,
//props.body = props.description;
//angular.copy(props.description, props.body);
props.description='<div class="seeclickfix-status status-'+props.status+'">'+props.status+'</div><div class="date">Reported on '+props.created_at+"</div>",geojson.features.push({type:"Feature",properties:props,geometry:{type:"Point",coordinates:[venues[i].lng,venues[i].lat]}})}//for
mapLayers[query]=L.mapbox.featureLayer().setGeoJSON(geojson),mapLayers[query].on("mouseover",function(e){e.layer.openPopup()}).on("mouseout",function(e){e.layer.closePopup()}).on("click",function(e){$mapWrap.addClass("details-open");var props=e.layer.feature.properties;
//console.log(e.layer.feature);
//if (e.layer.feature.properties.url != undefined) {
//  window.location = props.url;
//}d
//else {
$scope.seeclickfix=props,$scope.$apply()}),mapLayers[query].addTo(map)})}function iconColor(category){var color="#997C61",icon="marker";return category=category.toLowerCase(),-1!=category.indexOf("library")?(icon="library",color="#A973A9"):-1!=category.indexOf("school")||-1!=category.indexOf("college")||-1!=category.indexOf("university")?(icon="college",color="#ED9356"):-1!=category.indexOf("police")?(icon="police",color="#456D9C"):-1!=category.indexOf("fire")?(icon="fire-station",color="#E76C6D"):-1!=category.indexOf("post")?(icon="post",color="#5A97C4"):(-1!=category.indexOf("park")||-1!=category.indexOf("field"))&&(icon="park",color="#9BBF6A"),{"marker-symbol":icon,"marker-color":color}}if(console.log(settings),_.has(settings,"lat")){var layers=document.getElementById("menu-ui"),mapLayers={};
// @todo: get from $rootSCope
L.mapbox.accessToken="pk.eyJ1IjoiYWxiYXRyb3NzZGlnaXRhbCIsImEiOiI1cVUxbUxVIn0.SqKOVeohLfY0vfShalVDUw";var map=new L.mapbox.Map("map","albatrossdigital.lpkdpcjb",{center:new L.LatLng(settings.lat,settings.lng),zoom:15,scrollWheelZoom:!1,zoomControl:!1});new L.Control.Zoom({position:"topright"}).addTo(map),window.map=map;var activeLayers=_.get(Proud,"settings.proud_map_app.instances."+$rootScope.appId+".layers");activeLayers="string"==typeof activeLayers?activeLayers.split("\n"):activeLayers;var i=0;$.each(activeLayers,function(key,value){var layer=value.split(":");addLayer(layer[2],layer[0],null,layer[1],0==i),i++,console.log(layer)})}})}}})}(jQuery);